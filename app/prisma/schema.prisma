datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                     String        @id @default(cuid()) @map("_id")
  lastName               String?
  firstName              String?
  email                  String?       @unique
  emailVerified          DateTime?
  password               String?       @db.String
  image                  String?
  createdAt              DateTime      @default(now())
  active                 Boolean       @default(true)
  stripeCustomerId       String?       @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?       @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?       @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime?     @map(name: "stripe_current_period_end")
  accounts               Account[]
  sessions               Session[]
  verifyToken            VerifyToken[]
}

model VerifyToken {
  type        String
  value       String
  id          String    @id @default(cuid()) @map("_id")
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?
  userId      String
  user        User      @relation(fields: [userId], references: [id])
}
